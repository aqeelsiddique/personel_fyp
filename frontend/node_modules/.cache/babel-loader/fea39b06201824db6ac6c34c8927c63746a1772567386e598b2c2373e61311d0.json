{"ast":null,"code":"// Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../api';\nconst questionSlice = createSlice({\n  name: 'questions',\n  initialState: {\n    error: '',\n    loading: false,\n    data: [],\n    randomIndex: 0\n  },\n  reducers: {},\n  // adding cases for handling state life cycle of promise returned by thunk\n  extraReducers: builder => {\n    builder.addCase(fetchQuestion.pending, state => {\n      return {\n        ...state,\n        loading: true\n      };\n    });\n    builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.data,\n        randomIndex: Math.floor(Math.random() * (action.payload.data.length - 0) + 0)\n      };\n    });\n    builder.addCase(fetchQuestion.rejected, (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    });\n  }\n});\nexport default questionSlice.reducer;\n\n// Thunks Here\nexport const fetchQuestion = createAsyncThunk('questions/fetch', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    return await axios.get(`/questions/${data}`);\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\n\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from '../../../api';\n\n// export const fetchQuestion = createAsyncThunk(\n//   'questions/fetch',\n//   async (data, { rejectWithValue }) => {\n//     try {\n//       return await axios.get(`/questions/${data}`);\n//     } catch (error) {\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\n// const questionSlice = createSlice({\n//   name: 'questions',\n//   initialState: {\n//     error: '',\n//     loading: false,\n//     data: [],\n//     randomIndex: 0,\n//   },\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchQuestion.pending, (state) => {\n//       return { ...state, loading: true };\n//     });\n//     builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n//       console.log('Fetched Question Data:', action.payload.data); // Log the fetched data\n//       return {\n//         ...state,\n//         loading: false,\n//         data: [action.payload],\n//         randomIndex: 0,\n//       };\n//     });\n//     builder.addCase(fetchQuestion.rejected, (state, action) => {\n//       return { ...state, error: action.payload, loading: false };\n//     });\n//   },\n// });\n\n// export default questionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","questionSlice","name","initialState","error","loading","data","randomIndex","reducers","extraReducers","builder","addCase","fetchQuestion","pending","state","fulfilled","action","payload","Math","floor","random","length","rejected","reducer","rejectWithValue","get","response"],"sources":["C:/Users/DELL/Desktop/Final_FYP/frontend/src/redux/features/Question/index.js"],"sourcesContent":["// Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../api';\nconst questionSlice = createSlice({\n  name: 'questions',\n  initialState: {\n    error: '',\n    loading: false,\n    data: [],\n    randomIndex: 0,\n  },\n  reducers: {},\n  // adding cases for handling state life cycle of promise returned by thunk\n  extraReducers: (builder) => {\n    builder.addCase(fetchQuestion.pending, (state) => {\n      return { ...state, loading: true };\n    });\n    builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.data,\n        randomIndex: Math.floor(\n          Math.random() * (action.payload.data.length - 0) + 0\n        ),\n      };\n    });\n    builder.addCase(fetchQuestion.rejected, (state, action) => {\n      return { ...state, error: action.payload, loading: false };\n\n    });\n  },\n});\nexport default questionSlice.reducer;\n\n// Thunks Here\nexport const fetchQuestion = createAsyncThunk(\n  'questions/fetch',\n  async (data, { rejectWithValue }) => {\n    try {\n      return await axios.get(`/questions/${data}`);\n    } catch (error) {\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from '../../../api';\n\n// export const fetchQuestion = createAsyncThunk(\n//   'questions/fetch',\n//   async (data, { rejectWithValue }) => {\n//     try {\n//       return await axios.get(`/questions/${data}`);\n//     } catch (error) {\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\n// const questionSlice = createSlice({\n//   name: 'questions',\n//   initialState: {\n//     error: '',\n//     loading: false,\n//     data: [],\n//     randomIndex: 0,\n//   },\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchQuestion.pending, (state) => {\n//       return { ...state, loading: true };\n//     });\n//     builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n//       console.log('Fetched Question Data:', action.payload.data); // Log the fetched data\n//       return {\n//         ...state,\n//         loading: false,\n//         data: [action.payload],\n//         randomIndex: 0,\n//       };\n//     });\n//     builder.addCase(fetchQuestion.rejected, (state, action) => {\n//       return { ...state, error: action.payload, loading: false };\n//     });\n//   },\n// });\n\n// export default questionSlice.reducer;\n\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,cAAc;AAChC,MAAMC,aAAa,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZ;EACAC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,EAAGC,KAAK,IAAK;MAChD,OAAO;QAAE,GAAGA,KAAK;QAAET,OAAO,EAAE;MAAK,CAAC;IACpC,CAAC,CAAC;IACFK,OAAO,CAACC,OAAO,CAACC,aAAa,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1D,OAAO;QACL,GAAGF,KAAK;QACRT,OAAO,EAAE,KAAK;QACdC,IAAI,EAAEU,MAAM,CAACC,OAAO,CAACX,IAAI;QACzBC,WAAW,EAAEW,IAAI,CAACC,KAAK,CACrBD,IAAI,CAACE,MAAM,EAAE,IAAIJ,MAAM,CAACC,OAAO,CAACX,IAAI,CAACe,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;MAExD,CAAC;IACH,CAAC,CAAC;IACFX,OAAO,CAACC,OAAO,CAACC,aAAa,CAACU,QAAQ,EAAE,CAACR,KAAK,EAAEE,MAAM,KAAK;MACzD,OAAO;QAAE,GAAGF,KAAK;QAAEV,KAAK,EAAEY,MAAM,CAACC,OAAO;QAAEZ,OAAO,EAAE;MAAM,CAAC;IAE5D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACF,eAAeJ,aAAa,CAACsB,OAAO;;AAEpC;AACA,OAAO,MAAMX,aAAa,GAAGb,gBAAgB,CAC3C,iBAAiB,EACjB,OAAOO,IAAI,WAA0B;EAAA,IAAxB;IAAEkB;EAAgB,CAAC;EAC9B,IAAI;IACF,OAAO,MAAMxB,KAAK,CAACyB,GAAG,CAAE,cAAanB,IAAK,EAAC,CAAC;EAC9C,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA;IACd,OAAOoB,eAAe,CAACpB,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEsB,QAAQ,oDAAf,gBAAiBpB,IAAI,CAAC;EAC/C;AACF,CAAC,CACF;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}