{"ast":null,"code":"// // Imports\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from '../../../api';\n// const questionSlice = createSlice({\n//   name: 'questions',\n//   initialState: {\n//     error: '',\n//     loading: false,\n//     data: [],\n//     randomIndex: 0,\n//   },\n\n//   reducers: {},\n//   // adding cases for handling state life cycle of promise returned by thunk\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchQuestion.pending, (state) => {\n//       return { ...state, loading: true };\n//     });\n//     builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n//       return {\n//         ...state,\n//         loading: false,\n//         data: action.payload.data,\n//         randomIndex: Math.floor(\n//           Math.random() * (action.payload.data.length - 0) + 0\n//         ),\n//       };\n//     });\n//     builder.addCase(fetchQuestion.rejected, (state, action) => {\n//       return { ...state, error: action.payload, loading: false };\n//     });\n//   },\n// });\n// export default questionSlice.reducer;\n\n// // Thunks Here\n// export const fetchQuestion = createAsyncThunk(\n//   'questions/fetch',\n//   async (data, { rejectWithValue }) => {\n//     try {\n//       return await axios.get(`/questions/${data}`);\n//     } catch (error) {\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../api';\n\n// Thunks Here\nexport const fetchQuestion = createAsyncThunk('questions/fetch', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    return await axios.get(`/questions/${data}`);\n    console.log();\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\nconst questionSlice = createSlice({\n  name: 'questions',\n  initialState: {\n    error: '',\n    loading: false,\n    data: [],\n    // Array to store the questions\n    randomIndex: 0\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchQuestion.pending, state => {\n      return {\n        ...state,\n        loading: true\n      };\n    });\n    builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        data: [action.payload],\n        // Store the fetched question as an array\n        randomIndex: 0 // Reset the random index to 0\n      };\n    });\n\n    builder.addCase(fetchQuestion.rejected, (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    });\n  }\n});\nexport default questionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchQuestion","data","rejectWithValue","get","console","log","error","response","questionSlice","name","initialState","loading","randomIndex","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/DELL/Desktop/Final_FYP/frontend/src/redux/features/Question/index.js"],"sourcesContent":["// // Imports\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from '../../../api';\n// const questionSlice = createSlice({\n//   name: 'questions',\n//   initialState: {\n//     error: '',\n//     loading: false,\n//     data: [],\n//     randomIndex: 0,\n//   },\n\n//   reducers: {},\n//   // adding cases for handling state life cycle of promise returned by thunk\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchQuestion.pending, (state) => {\n//       return { ...state, loading: true };\n//     });\n//     builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n//       return {\n//         ...state,\n//         loading: false,\n//         data: action.payload.data,\n//         randomIndex: Math.floor(\n//           Math.random() * (action.payload.data.length - 0) + 0\n//         ),\n//       };\n//     });\n//     builder.addCase(fetchQuestion.rejected, (state, action) => {\n//       return { ...state, error: action.payload, loading: false };\n//     });\n//   },\n// });\n// export default questionSlice.reducer;\n\n// // Thunks Here\n// export const fetchQuestion = createAsyncThunk(\n//   'questions/fetch',\n//   async (data, { rejectWithValue }) => {\n//     try {\n//       return await axios.get(`/questions/${data}`);\n//     } catch (error) {\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\n\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../api';\n\n// Thunks Here\nexport const fetchQuestion = createAsyncThunk(\n  'questions/fetch',\n  async (data, { rejectWithValue }) => {\n    try {\n      return await axios.get(`/questions/${data}`);\n      console.log()\n    } catch (error) {\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\nconst questionSlice = createSlice({\n  name: 'questions',\n  initialState: {\n    error: '',\n    loading: false,\n    data: [], // Array to store the questions\n    randomIndex: 0,\n\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchQuestion.pending, (state) => {\n      return { ...state, loading: true };\n    });\n    builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        data: [action.payload], // Store the fetched question as an array\n        randomIndex: 0, // Reset the random index to 0\n      };\n    });\n    builder.addCase(fetchQuestion.rejected, (state, action) => {\n      return { ...state, error: action.payload, loading: false };\n    });\n  },\n\n});\n\n\nexport default questionSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,cAAc;;AAEhC;AACA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,iBAAiB,EACjB,OAAOG,IAAI,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EAC9B,IAAI;IACF,OAAO,MAAMH,KAAK,CAACI,GAAG,CAAE,cAAaF,IAAK,EAAC,CAAC;IAC5CG,OAAO,CAACC,GAAG,EAAE;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA;IACd,OAAOJ,eAAe,CAACI,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEC,QAAQ,oDAAf,gBAAiBN,IAAI,CAAC;EAC/C;AACF,CAAC,CACF;AAED,MAAMO,aAAa,GAAGX,WAAW,CAAC;EAChCY,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZJ,KAAK,EAAE,EAAE;IACTK,OAAO,EAAE,KAAK;IACdV,IAAI,EAAE,EAAE;IAAE;IACVW,WAAW,EAAE;EAEf,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACiB,OAAO,EAAGC,KAAK,IAAK;MAChD,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAE;MAAK,CAAC;IACpC,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1D,OAAO;QACL,GAAGF,KAAK;QACRP,OAAO,EAAE,KAAK;QACdV,IAAI,EAAE,CAACmB,MAAM,CAACC,OAAO,CAAC;QAAE;QACxBT,WAAW,EAAE,CAAC,CAAE;MAClB,CAAC;IACH,CAAC,CAAC;;IACFG,OAAO,CAACC,OAAO,CAAChB,aAAa,CAACsB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACzD,OAAO;QAAE,GAAGF,KAAK;QAAEZ,KAAK,EAAEc,MAAM,CAACC,OAAO;QAAEV,OAAO,EAAE;MAAM,CAAC;IAC5D,CAAC,CAAC;EACJ;AAEF,CAAC,CAAC;AAGF,eAAeH,aAAa,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}