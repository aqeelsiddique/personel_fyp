{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer');\n    if (!config.key) throw new Error('key is required in persistor config');\n    if (!config.storage) throw new Error(\"reduxjs-toolkit-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'reduxjs-toolkit-persist/lib/storage'`\");\n  }\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n  return function (state, action) {\n    var _a = state || {},\n      _persist = _a._persist,\n      rest = __rest(_a, [\"_persist\"]);\n    var restState = rest;\n    if (action.type === PERSIST) {\n      var _sealed = false;\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error(\"reduxjs-toolkit-persist: rehydrate for \\\"\".concat(config.key, \"\\\" called after timeout.\"), payload, err);\n        // only rehydrate if we are not already sealed\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error(\"reduxjs-toolkit-persist: persist timed out for persist key \\\"\".concat(config.key, \"\\\"\")));\n      }, timeout);\n      // @NOTE PERSIST resumes if paused.\n      _paused = false;\n      // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n      if (!_persistoid) _persistoid = createPersistoid(config);\n      // @NOTE PERSIST can be called multiple times, noop after the first\n      if (_persist) {\n        // We still need to call the base reducer because there might be nested\n        // uses of persistReducer which need to be aware of the PERSIST action\n        return Object.assign(Object.assign({}, baseReducer(restState, action)), {\n          _persist: _persist\n        });\n      }\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('reduxjs-toolkit-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n      action.register(config.key);\n      getStoredState(config).then(function (restoredState) {\n        if (restoredState) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          var migrate = config.migrate || function (s, _) {\n            return Promise.resolve(s);\n          };\n          migrate(restoredState, version).then(function (migratedState) {\n            _rehydrate(migratedState);\n          }, function (migrateErr) {\n            if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-toolkit-persist: migration error', migrateErr);\n            _rehydrate(undefined, migrateErr);\n          });\n        }\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n      return Object.assign(Object.assign({}, baseReducer(restState, action)), {\n        _persist: {\n          version: version,\n          rehydrated: false\n        }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return Object.assign(Object.assign({}, baseReducer(restState, action)), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return Object.assign(Object.assign({}, baseReducer(restState, action)), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return Object.assign(Object.assign({}, restState), {\n        _persist: Object.assign(Object.assign({}, _persist), {\n          rehydrated: true\n        })\n      });\n      // @NOTE if key does not match, will continue to default else below\n      if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload;\n        // only reconcile state if stateReconciler and inboundState are both defined\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n        var _newState = Object.assign(Object.assign({}, reconciledRest), {\n          _persist: Object.assign(Object.assign({}, _persist), {\n            rehydrated: true\n          })\n        });\n        return conditionalUpdate(_newState);\n      }\n    }\n    // if we have not already handled PERSIST, straight passthrough\n    if (!_persist) return baseReducer(state, action);\n    // run base reducer:\n    // is state modified ? return original : return updated\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;\n    return conditionalUpdate(Object.assign(Object.assign({}, newState), {\n      _persist: _persist\n    }));\n  };\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","FLUSH","PAUSE","PERSIST","PURGE","REHYDRATE","DEFAULT_VERSION","autoMergeLevel1","createPersistoid","defaultGetStoredState","purgeStoredState","DEFAULT_TIMEOUT","persistReducer","config","baseReducer","process","env","NODE_ENV","Error","key","storage","version","undefined","stateReconciler","getStoredState","timeout","_persistoid","_purge","_paused","conditionalUpdate","state","_persist","rehydrated","update","action","_a","rest","restState","type","_sealed","_rehydrate","payload","err","console","error","rehydrate","setTimeout","assign","register","then","restoredState","migrate","_","Promise","resolve","migratedState","migrateErr","result","flush","reducedState","inboundState","reconciledRest","newState"],"sources":["E:/Hero Host (FYP Proje/VisioSpark/frontend/node_modules/reduxjs-toolkit-persist/es/persistReducer.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION, } from './constants';\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\nconst DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\nexport default function persistReducer(config, baseReducer) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!config)\n            throw new Error('config is required for persistReducer');\n        if (!config.key)\n            throw new Error('key is required in persistor config');\n        if (!config.storage)\n            throw new Error(\"reduxjs-toolkit-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'reduxjs-toolkit-persist/lib/storage'`\");\n    }\n    const version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n    const stateReconciler = config.stateReconciler === undefined\n        ? autoMergeLevel1\n        : config.stateReconciler;\n    const getStoredState = config.getStoredState || defaultGetStoredState;\n    const timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n    let _persistoid = null;\n    let _purge = false;\n    let _paused = true;\n    const conditionalUpdate = (state) => {\n        // update the persistoid only if we are rehydrated and not paused\n        state._persist.rehydrated &&\n            _persistoid &&\n            !_paused &&\n            _persistoid.update(state);\n        return state;\n    };\n    return (state, action) => {\n        const _a = state || {}, { _persist } = _a, rest = __rest(_a, [\"_persist\"]);\n        const restState = rest;\n        if (action.type === PERSIST) {\n            let _sealed = false;\n            const _rehydrate = (payload, err) => {\n                // dev warning if we are already sealed\n                if (process.env.NODE_ENV !== 'production' && _sealed)\n                    console.error(`reduxjs-toolkit-persist: rehydrate for \"${config.key}\" called after timeout.`, payload, err);\n                // only rehydrate if we are not already sealed\n                if (!_sealed) {\n                    action.rehydrate(config.key, payload, err);\n                    _sealed = true;\n                }\n            };\n            timeout &&\n                setTimeout(() => {\n                    !_sealed &&\n                        _rehydrate(undefined, new Error(`reduxjs-toolkit-persist: persist timed out for persist key \"${config.key}\"`));\n                }, timeout);\n            // @NOTE PERSIST resumes if paused.\n            _paused = false;\n            // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n            if (!_persistoid)\n                _persistoid = createPersistoid(config);\n            // @NOTE PERSIST can be called multiple times, noop after the first\n            if (_persist) {\n                // We still need to call the base reducer because there might be nested\n                // uses of persistReducer which need to be aware of the PERSIST action\n                return Object.assign(Object.assign({}, baseReducer(restState, action)), { _persist });\n            }\n            if (typeof action.rehydrate !== 'function' ||\n                typeof action.register !== 'function')\n                throw new Error('reduxjs-toolkit-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n            action.register(config.key);\n            getStoredState(config).then(restoredState => {\n                if (restoredState) {\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    const migrate = config.migrate || ((s, _) => Promise.resolve(s));\n                    migrate(restoredState, version).then(migratedState => {\n                        _rehydrate(migratedState);\n                    }, migrateErr => {\n                        if (process.env.NODE_ENV !== 'production' && migrateErr)\n                            console.error('redux-toolkit-persist: migration error', migrateErr);\n                        _rehydrate(undefined, migrateErr);\n                    });\n                }\n            }, err => {\n                _rehydrate(undefined, err);\n            });\n            return Object.assign(Object.assign({}, baseReducer(restState, action)), { _persist: { version, rehydrated: false } });\n        }\n        else if (action.type === PURGE) {\n            _purge = true;\n            action.result(purgeStoredState(config));\n            return Object.assign(Object.assign({}, baseReducer(restState, action)), { _persist });\n        }\n        else if (action.type === FLUSH) {\n            action.result(_persistoid && _persistoid.flush());\n            return Object.assign(Object.assign({}, baseReducer(restState, action)), { _persist });\n        }\n        else if (action.type === PAUSE) {\n            _paused = true;\n        }\n        else if (action.type === REHYDRATE) {\n            // noop on restState if purging\n            if (_purge)\n                return Object.assign(Object.assign({}, restState), { _persist: Object.assign(Object.assign({}, _persist), { rehydrated: true }) });\n            // @NOTE if key does not match, will continue to default else below\n            if (action.key === config.key) {\n                const reducedState = baseReducer(restState, action);\n                const inboundState = action.payload;\n                // only reconcile state if stateReconciler and inboundState are both defined\n                const reconciledRest = stateReconciler !== false && inboundState !== undefined\n                    ? stateReconciler(inboundState, state, reducedState, config)\n                    : reducedState;\n                const newState = Object.assign(Object.assign({}, reconciledRest), { _persist: Object.assign(Object.assign({}, _persist), { rehydrated: true }) });\n                return conditionalUpdate(newState);\n            }\n        }\n        // if we have not already handled PERSIST, straight passthrough\n        if (!_persist)\n            return baseReducer(state, action);\n        // run base reducer:\n        // is state modified ? return original : return updated\n        const newState = baseReducer(restState, action);\n        if (newState === restState)\n            return state;\n        return conditionalUpdate(Object.assign(Object.assign({}, newState), { _persist }));\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}