{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Final_FYP\\\\frontend\\\\src\\\\component\\\\result.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './index.css';\nimport SelectQuiz from '../sub.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setCurrentRound, setCurrentTeam, setTotalRounds } from '../redux/features/Team';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { setTime } from '../redux/features/Timer';\n// import { useSelector, useDispatch } from 'react-redux';\n\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const currentRound = useSelector(state => state.teams.currentRound);\n  const totalRounds = useSelector(state => state.teams.totalRounds);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const selectedRound = useSelector(state => state.teams.roundSelected);\n  // const currentTeam = useSelector((state) => state.teams.currentTeam);\n\n  let teams = useSelector(state => state.teams.data);\n  let sortedTeams = [...teams];\n  sortedTeams.sort((a, b) => b.score - a.score);\n  const handleClick = async () => {\n    try {\n      const response = await axios.post('/results', {\n        round: currentRound + 1,\n        teams: sortedTeams\n      });\n      if (response.status === 201) {\n        console.log('Result saved successfully');\n      } else {\n        console.log('Error saving result');\n      }\n    } catch (error) {\n      console.log('Error:', error.message);\n    }\n    if (currentRound + 1 >= totalRounds) {\n      toast.info('Thanks for participating');\n      dispatch(setCurrentRound(0));\n      dispatch(setCurrentTeam(0));\n      dispatch(setTotalRounds(0));\n      dispatch(setTime(0));\n      navigate('/main2');\n    } else {\n      dispatch(setCurrentRound(currentRound + 1));\n      dispatch(setCurrentTeam(0));\n      navigate('/subject');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      style: {\n        backgroundImage: `url(${SelectQuiz})`,\n        backgroundPosition: 'center center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        width: '100%',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round-detail\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Result \", selectedRound.replace('_', ' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-card\",\n          children: sortedTeams === null || sortedTeams === void 0 ? void 0 : sortedTeams.map((team, index) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: \"r-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-4\",\n                  children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                    className: \"teams-display\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card\",\n                      children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                        className: \"uniname\",\n                        children: team.universityname\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                        className: \"teamname\",\n                        children: [\"Score : \", team.score]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 17\n                    }, this)\n                  }, `${index}_${team === null || team === void 0 ? void 0 : team.teamname}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-submit\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Color-White\",\n            onClick: handleClick,\n            children: currentRound + 1 >= totalRounds ? 'Go to Main Screen' : 'continue'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"WedsPKDVeQNCnR48gKPjEbBEfZY=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","SelectQuiz","useSelector","useDispatch","useNavigate","setCurrentRound","setCurrentTeam","setTotalRounds","toast","axios","setTime","Card","ListGroup","Result","currentRound","state","teams","totalRounds","dispatch","navigate","selectedRound","roundSelected","data","sortedTeams","sort","a","b","score","handleClick","response","post","round","status","console","log","error","message","info","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","replace","map","team","index","universityname","teamname"],"sources":["C:/Users/DELL/Desktop/Final_FYP/frontend/src/component/result.js"],"sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport SelectQuiz from '../sub.png';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  setCurrentRound,\r\n  setCurrentTeam,\r\n  setTotalRounds,\r\n} from '../redux/features/Team';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nimport { setTime } from '../redux/features/Timer';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nconst Result = () => {\r\n  const currentRound = useSelector((state) => state.teams.currentRound);\r\n  const totalRounds = useSelector((state) => state.teams.totalRounds);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const selectedRound = useSelector((state) => state.teams.roundSelected);\r\n  // const currentTeam = useSelector((state) => state.teams.currentTeam);\r\n\r\n  let teams = useSelector((state) => state.teams.data);\r\n  let sortedTeams = [...teams];\r\n  sortedTeams.sort((a, b) => b.score - a.score);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const response = await axios.post('/results', {\r\n        round: currentRound + 1,\r\n        teams: sortedTeams,\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        console.log('Result saved successfully');\r\n      } else {\r\n        console.log('Error saving result');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error.message);\r\n    }\r\n\r\n\r\n\r\n    if (currentRound + 1 >= totalRounds) {\r\n      toast.info('Thanks for participating');\r\n      dispatch(setCurrentRound(0));\r\n      dispatch(setCurrentTeam(0));\r\n      dispatch(setTotalRounds(0));\r\n      dispatch(setTime(0));\r\n      navigate('/main2');\r\n    } else {\r\n      dispatch(setCurrentRound(currentRound + 1));\r\n      dispatch(setCurrentTeam(0));\r\n      navigate('/subject');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"result\">\r\n      <div\r\n        className=\"quiz\"\r\n        style={{\r\n          backgroundImage: `url(${SelectQuiz})`,\r\n          backgroundPosition: 'center center',\r\n          backgroundSize: 'cover',\r\n          backgroundRepeat: 'no-repeat',\r\n          width: '100%',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <div className=\"round-detail\">\r\n          <div className=\"round\">\r\n            <h1>\r\n              {/* <span>Result</span> Round : {currentRound + 1} */}\r\n              Result {selectedRound.replace('_', ' ')} \r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"result-card\">\r\n            {/* <div className=\"row\">\r\n              <div className=\"col-md-4\"> */}\r\n\r\n                  {/* <ol>\r\n                  {sortedTeams?.map((team, index) => {\r\n                    return (\r\n                      <li key={`${index}_${team?.teamname}`}>\r\n                        <p>{team.universityname} University</p>\r\n                        <p>Score : {team.score}</p>\r\n                      </li>\r\n\r\n                    );\r\n                  })}\r\n                </ol> */}\r\n\r\n                    {sortedTeams?.map((team, index) => {\r\n                      return (\r\n                  <Card className='r-card'>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <ListGroup className='teams-display' key={`${index}_${team?.teamname}`} >\r\n                <div className=\"card\">\r\n                          <ListGroup.Item className='uniname'>{team.universityname}</ListGroup.Item>\r\n                          <ListGroup.Item className='teamname'>Score : {team.score}</ListGroup.Item>\r\n\r\n                </div>\r\n                        </ListGroup>\r\n                        </div>\r\n                  </div>\r\n                  </Card>\r\n                      );\r\n                    })}\r\n\r\n              {/* </div>\r\n            </div> */}\r\n          </div>\r\n          <div className=\"card-submit\">\r\n            <button className=\"Color-White\" onClick={handleClick}>\r\n              {currentRound + 1 >= totalRounds\r\n                ? 'Go to Main Screen'\r\n                : 'continue'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,eAAe,EACfC,cAAc,EACdC,cAAc,QACT,wBAAwB;AAC/B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAO,QAAQ,yBAAyB;AACjD;;AAEA,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAElD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAMC,YAAY,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,YAAY,CAAC;EACrE,MAAMG,WAAW,GAAGf,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC;EACnE,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,aAAa,GAAGlB,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACK,aAAa,CAAC;EACvE;;EAEA,IAAIL,KAAK,GAAGd,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACM,IAAI,CAAC;EACpD,IAAIC,WAAW,GAAG,CAAC,GAAGP,KAAK,CAAC;EAC5BO,WAAW,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;EAE7C,MAAMC,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,UAAU,EAAE;QAC5CC,KAAK,EAAEjB,YAAY,GAAG,CAAC;QACvBE,KAAK,EAAEO;MACT,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,KAAK,CAACC,OAAO,CAAC;IACtC;IAIA,IAAItB,YAAY,GAAG,CAAC,IAAIG,WAAW,EAAE;MACnCT,KAAK,CAAC6B,IAAI,CAAC,0BAA0B,CAAC;MACtCnB,QAAQ,CAACb,eAAe,CAAC,CAAC,CAAC,CAAC;MAC5Ba,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC,CAAC;MAC3BY,QAAQ,CAACX,cAAc,CAAC,CAAC,CAAC,CAAC;MAC3BW,QAAQ,CAACR,OAAO,CAAC,CAAC,CAAC,CAAC;MACpBS,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLD,QAAQ,CAACb,eAAe,CAACS,YAAY,GAAG,CAAC,CAAC,CAAC;MAC3CI,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC,CAAC;MAC3Ba,QAAQ,CAAC,UAAU,CAAC;IACtB;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACrB;MACE,SAAS,EAAC,MAAM;MAChB,KAAK,EAAE;QACLmB,eAAe,EAAG,OAAMrC,UAAW,GAAE;QACrCsC,kBAAkB,EAAE,eAAe;QACnCC,cAAc,EAAE,OAAO;QACvBC,gBAAgB,EAAE,WAAW;QAC7BC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV,CAAE;MAAA,wBAEF;QAAK,SAAS,EAAC,cAAc;QAAA,uBAC3B;UAAK,SAAS,EAAC,OAAO;UAAA,uBACpB;YAAA,sBAEUvB,aAAa,CAACwB,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;QACpC;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACF,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAK,SAAS,EAAC,aAAa;UAAA,UAgBjBrB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;YACjC,oBACJ,QAAC,IAAI;cAAC,SAAS,EAAC,QAAQ;cAAA,uBACxB;gBAAK,SAAS,EAAC,KAAK;gBAAA,uBAClB;kBAAK,SAAS,EAAC,UAAU;kBAAA,uBACrB,QAAC,SAAS;oBAAC,SAAS,EAAC,eAAe;oBAAA,uBAC5C;sBAAK,SAAS,EAAC,MAAM;sBAAA,wBACX,QAAC,SAAS,CAAC,IAAI;wBAAC,SAAS,EAAC,SAAS;wBAAA,UAAED,IAAI,CAACE;sBAAc;wBAAA;wBAAA;wBAAA;sBAAA,QAAkB,eAC1E,QAAC,SAAS,CAAC,IAAI;wBAAC,SAAS,EAAC,UAAU;wBAAA,uBAAUF,IAAI,CAACnB,KAAK;sBAAA;wBAAA;wBAAA;wBAAA;sBAAA,QAAkB;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA;kBAE9E,GAL6C,GAAEoB,KAAM,IAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,QAAS,EAAC;oBAAA;oBAAA;oBAAA;kBAAA;gBAM1D;kBAAA;kBAAA;kBAAA;gBAAA;cACN;gBAAA;gBAAA;gBAAA;cAAA;YACN;cAAA;cAAA;cAAA;YAAA,QACC;UAEL,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAIN,eACN;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC1B;YAAQ,SAAS,EAAC,aAAa;YAAC,OAAO,EAAErB,WAAY;YAAA,UAClDd,YAAY,GAAG,CAAC,IAAIG,WAAW,GAC5B,mBAAmB,GACnB;UAAU;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAjHIJ,MAAM;EAAA,QACWX,WAAW,EACZA,WAAW,EACdC,WAAW,EACXC,WAAW,EACNF,WAAW,EAGrBA,WAAW;AAAA;AAAA,KARnBW,MAAM;AAmHZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}