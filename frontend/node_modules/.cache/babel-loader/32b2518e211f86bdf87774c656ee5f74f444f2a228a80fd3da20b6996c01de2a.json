{"ast":null,"code":"// // Imports\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from '../../../api';\n// const questionSlice = createSlice({\n//   name: 'questions',\n//   initialState: {\n//     error: '',\n//     loading: false,\n//     data: [],\n//     randomIndex: 0,\n//   },\n//   reducers: {},\n//   // adding cases for handling state life cycle of promise returned by thunk\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchQuestion.pending, (state) => {\n//       return { ...state, loading: true };\n//     });\n//     builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n//       return {\n//         ...state,\n//         loading: false,\n//         data: action.payload.data,\n//         randomIndex: Math.floor(\n//           Math.random() * (action.payload.data.length - 0) + 0\n//         ),\n//       };\n//     });\n//     builder.addCase(fetchQuestion.rejected, (state, action) => {\n//       console.log('Fetched Question Data:', action.payload.data); // Log the fetched data\n\n//       return { ...state, error: action.payload, loading: false };\n\n//     });\n//   },\n// });\n// export default questionSlice.reducer;\n\n// // Thunks Here\n// export const fetchQuestion = createAsyncThunk(\n//   'questions/fetch',\n//   async (data, { rejectWithValue }) => {\n//     try {\n//       return await axios.get(`/questions/${data}`);\n//     } catch (error) {\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../../api\";\nexport const fetchQuestion = createAsyncThunk(\"questions/fetch\", async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await axios.get(`/questions/${data}`);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\nconst questionSlice = createSlice({\n  name: \"questions\",\n  initialState: {\n    error: \"\",\n    loading: false,\n    data: [],\n    randomIndex: 0\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchQuestion.pending, state => {\n      return {\n        ...state,\n        loading: true\n      };\n    });\n    builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.data,\n        randomIndex: Math.floor(Math.random() * action.payload.data.length)\n      };\n    });\n    builder.addCase(fetchQuestion.rejected, (state, action) => {\n      console.log(\"Fetched Question Data:\", action.payload.data); // Log the fetched data\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    });\n  }\n});\nexport default questionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchQuestion","data","rejectWithValue","response","get","error","questionSlice","name","initialState","loading","randomIndex","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","Math","floor","random","length","rejected","console","log","reducer"],"sources":["C:/Users/DELL/Desktop/Final_FYP/frontend/src/redux/features/Question/index.js"],"sourcesContent":["// // Imports\n// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n// import axios from '../../../api';\n// const questionSlice = createSlice({\n//   name: 'questions',\n//   initialState: {\n//     error: '',\n//     loading: false,\n//     data: [],\n//     randomIndex: 0,\n//   },\n//   reducers: {},\n//   // adding cases for handling state life cycle of promise returned by thunk\n//   extraReducers: (builder) => {\n//     builder.addCase(fetchQuestion.pending, (state) => {\n//       return { ...state, loading: true };\n//     });\n//     builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n//       return {\n//         ...state,\n//         loading: false,\n//         data: action.payload.data,\n//         randomIndex: Math.floor(\n//           Math.random() * (action.payload.data.length - 0) + 0\n//         ),\n//       };\n//     });\n//     builder.addCase(fetchQuestion.rejected, (state, action) => {\n//       console.log('Fetched Question Data:', action.payload.data); // Log the fetched data\n\n//       return { ...state, error: action.payload, loading: false };\n\n//     });\n//   },\n// });\n// export default questionSlice.reducer;\n\n// // Thunks Here\n// export const fetchQuestion = createAsyncThunk(\n//   'questions/fetch',\n//   async (data, { rejectWithValue }) => {\n//     try {\n//       return await axios.get(`/questions/${data}`);\n//     } catch (error) {\n//       return rejectWithValue(error?.response?.data);\n//     }\n//   }\n// );\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../../api\";\n\nexport const fetchQuestion = createAsyncThunk(\n  \"questions/fetch\",\n  async (data, { rejectWithValue }) => {\n    try {\n\n    \n      const response = await axios.get(`/questions/${data}`);\n      return response.data;\n\n    } catch (error) {\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\nconst questionSlice = createSlice({\n  name: \"questions\",\n  initialState: {\n    error: \"\",\n    loading: false,\n    data: [],\n    randomIndex: 0,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchQuestion.pending, (state) => {\n      return { ...state, loading: true };\n    });\n    builder.addCase(fetchQuestion.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.data,\n        randomIndex: Math.floor(Math.random() * action.payload.data.length),\n      };\n    });\n    builder.addCase(fetchQuestion.rejected, (state, action) => {\n      console.log(\"Fetched Question Data:\", action.payload.data); // Log the fetched data\n      return { ...state, error: action.payload, loading: false };\n    });\n  },\n});\n\nexport default questionSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,cAAc;AAEhC,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,iBAAiB,EACjB,OAAOG,IAAI,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EAC9B,IAAI;IAGF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,cAAaH,IAAK,EAAC,CAAC;IACtD,OAAOE,QAAQ,CAACF,IAAI;EAEtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA;IACd,OAAOH,eAAe,CAACG,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEF,QAAQ,oDAAf,gBAAiBF,IAAI,CAAC;EAC/C;AACF,CAAC,CACF;AAED,MAAMK,aAAa,GAAGT,WAAW,CAAC;EAChCU,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZH,KAAK,EAAE,EAAE;IACTI,OAAO,EAAE,KAAK;IACdR,IAAI,EAAE,EAAE;IACRS,WAAW,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACd,aAAa,CAACe,OAAO,EAAGC,KAAK,IAAK;MAChD,OAAO;QAAE,GAAGA,KAAK;QAAEP,OAAO,EAAE;MAAK,CAAC;IACpC,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACd,aAAa,CAACiB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1D,OAAO;QACL,GAAGF,KAAK;QACRP,OAAO,EAAE,KAAK;QACdR,IAAI,EAAEiB,MAAM,CAACC,OAAO,CAAClB,IAAI;QACzBS,WAAW,EAAEU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,MAAM,CAACC,OAAO,CAAClB,IAAI,CAACsB,MAAM;MACpE,CAAC;IACH,CAAC,CAAC;IACFV,OAAO,CAACC,OAAO,CAACd,aAAa,CAACwB,QAAQ,EAAE,CAACR,KAAK,EAAEE,MAAM,KAAK;MACzDO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,MAAM,CAACC,OAAO,CAAClB,IAAI,CAAC,CAAC,CAAC;MAC5D,OAAO;QAAE,GAAGe,KAAK;QAAEX,KAAK,EAAEa,MAAM,CAACC,OAAO;QAAEV,OAAO,EAAE;MAAM,CAAC;IAC5D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeH,aAAa,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}