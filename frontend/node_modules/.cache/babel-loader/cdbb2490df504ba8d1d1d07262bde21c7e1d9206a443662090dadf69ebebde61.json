{"ast":null,"code":"import storage from 'reduxjs-toolkit-persist/lib/storage';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'reduxjs-toolkit-persist';\nimport teamFeature from './features/Team';\nimport questionFeature from './features/Question';\nimport timerFeature from './features/Timer';\n\n// Defining Root Reducer: It contains all of our app reducers\nconst rootReducer = combineReducers({\n  teams: teamFeature,\n  questions: questionFeature,\n  timer: timerFeature\n});\n/*\n\n  This will be the persisted Reducer, it will detect change in state\n  and persists it again\n*/\nconst _persistedReducer = persistReducer({\n  key: 'root',\n  storage\n}, rootReducer);\n\n// Defining Store Now\nconst store = configureStore({\n  reducer: _persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\n// Finally defining and exporting persistor\nexport const persistor = persistStore(store);\n// exporting store\nexport default store;","map":{"version":3,"names":["storage","combineReducers","configureStore","persistStore","persistReducer","teamFeature","questionFeature","timerFeature","rootReducer","teams","questions","timer","_persistedReducer","key","store","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["C:/Users/DELL/Desktop/Final_FYP/frontend/src/redux/store.js"],"sourcesContent":["import storage from 'reduxjs-toolkit-persist/lib/storage';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'reduxjs-toolkit-persist';\nimport teamFeature from './features/Team';\nimport questionFeature from './features/Question';\nimport timerFeature from './features/Timer';\n\n// Defining Root Reducer: It contains all of our app reducers\nconst rootReducer = combineReducers({\n  teams: teamFeature,\n  questions: questionFeature,\n  timer: timerFeature,\n});\n/*\n\n  This will be the persisted Reducer, it will detect change in state\n  and persists it again\n*/\nconst _persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n  },\n  rootReducer\n);\n\n// Defining Store Now\nconst store = configureStore({\n  reducer: _persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n// Finally defining and exporting persistor\nexport const persistor = persistStore(store);\n// exporting store\nexport default store;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,qCAAqC;AACzD,SAASC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,YAAY,EAAEC,cAAc,QAAQ,yBAAyB;AACtE,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;;AAE3C;AACA,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCQ,KAAK,EAAEJ,WAAW;EAClBK,SAAS,EAAEJ,eAAe;EAC1BK,KAAK,EAAEJ;AACT,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,MAAMK,iBAAiB,GAAGR,cAAc,CACtC;EACES,GAAG,EAAE,MAAM;EACXb;AACF,CAAC,EACDQ,WAAW,CACZ;;AAED;AACA,MAAMM,KAAK,GAAGZ,cAAc,CAAC;EAC3Ba,OAAO,EAAEH,iBAAiB;EAC1BI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AACF;AACA,OAAO,MAAMC,SAAS,GAAGhB,YAAY,CAACW,KAAK,CAAC;AAC5C;AACA,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}