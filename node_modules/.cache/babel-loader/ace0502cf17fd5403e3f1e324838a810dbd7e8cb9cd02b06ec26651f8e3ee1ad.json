{"ast":null,"code":"// Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../api';\nconst teamSlice = createSlice({\n  name: 'teams',\n  initialState: {\n    error: '',\n    loading: false,\n    data: [],\n    currentTeam: 0,\n    currentRound: 0,\n    totalRounds: 0,\n    totalTeams: 0,\n    roundSelected: '',\n    selectedSubject: ''\n  },\n  reducers: {\n    setCurrentTeam: (state, action) => {\n      return {\n        ...state,\n        currentTeam: action.payload\n      };\n    },\n    setCurrentRound: (state, action) => {\n      return {\n        ...state,\n        currentRound: action.payload\n      };\n    },\n    setTotalRounds: (state, action) => {\n      return {\n        ...state,\n        totalRounds: action.payload\n      };\n    },\n    setTeamScore: (state, action) => {\n      console.log('Action: ', action.payload);\n      console.log('Current State: ', state.data);\n      return {\n        ...state,\n        data: state.data.map(team => {\n          var _action$payload;\n          console.log('Team: ', team.teamname);\n          if (team.teamname.trim().toLowerCase() === (action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.name.trim().toLowerCase())) {\n            var _action$payload2;\n            return {\n              ...team,\n              score: action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.score\n            };\n          } else return team;\n        })\n      };\n    },\n    setRoundSelected: (state, action) => {\n      return {\n        ...state,\n        roundSelected: action.payload\n      };\n    },\n    setSubject: (state, action) => {\n      return {\n        ...state,\n        selectedSubject: action.payload\n      };\n    }\n  },\n  // adding cases for handling state life cycle of promise returned by thunk\n  extraReducers: builder => {\n    builder.addCase(fetchTeams.pending, state => {\n      return {\n        ...state,\n        loading: true\n      };\n    });\n    builder.addCase(fetchTeams.fulfilled, (state, action) => {\n      return {\n        ...state,\n        data: action.payload.data.map(item => {\n          return {\n            ...item,\n            score: 0\n          };\n        }),\n        totalTeams: action.payload.data.length,\n        loading: false\n      };\n    });\n    builder.addCase(fetchTeams.rejected, (state, action) => {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    });\n  }\n});\nexport const {\n  setCurrentRound,\n  setCurrentTeam,\n  setTotalRounds,\n  setTeamScore,\n  setRoundSelected,\n  setSubject\n} = teamSlice.actions;\nexport default teamSlice.reducer;\n\n// Thunks Here\nexport const fetchTeams = createAsyncThunk('teams/fetch', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    return await axios.get(`/selectteams?round=${data}`);\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","teamSlice","name","initialState","error","loading","data","currentTeam","currentRound","totalRounds","totalTeams","roundSelected","selectedSubject","reducers","setCurrentTeam","state","action","payload","setCurrentRound","setTotalRounds","setTeamScore","console","log","map","team","teamname","trim","toLowerCase","score","setRoundSelected","setSubject","extraReducers","builder","addCase","fetchTeams","pending","fulfilled","item","length","rejected","actions","reducer","rejectWithValue","get","response"],"sources":["C:/Users/DELL/Desktop/Final_FYP/frontend/src/redux/features/Team/index.js"],"sourcesContent":["// Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../api';\nconst teamSlice = createSlice({\n  name: 'teams',\n  initialState: {\n    error: '',\n    loading: false,\n    data: [],\n    currentTeam: 0,\n    currentRound: 0,\n    totalRounds: 0,\n    totalTeams: 0,\n    roundSelected: '',\n    selectedSubject: '',\n  },\n\n  reducers: {\n    setCurrentTeam: (state, action) => {\n      return { ...state, currentTeam: action.payload };\n    },\n    setCurrentRound: (state, action) => {\n      return { ...state, currentRound: action.payload };\n    },\n    setTotalRounds: (state, action) => {\n      return { ...state, totalRounds: action.payload };\n    },\n    setTeamScore: (state, action) => {\n      console.log('Action: ', action.payload);\n      console.log('Current State: ', state.data);\n      return {\n        ...state,\n        data: state.data.map((team) => {\n          console.log('Team: ', team.teamname);\n          if (\n            team.teamname.trim().toLowerCase() ===\n            action?.payload?.name.trim().toLowerCase()\n          ) {\n            return { ...team, score: action?.payload?.score };\n          } else return team;\n        }),\n      };\n    },\n    setRoundSelected: (state, action) => {\n      return { ...state, roundSelected: action.payload };\n    },\n    setSubject: (state, action) => {\n      return { ...state, selectedSubject: action.payload };\n    },\n  },\n  // adding cases for handling state life cycle of promise returned by thunk\n  extraReducers: (builder) => {\n    builder.addCase(fetchTeams.pending, (state) => {\n      return { ...state, loading: true };\n    });\n    builder.addCase(fetchTeams.fulfilled, (state, action) => {\n      return {\n        ...state,\n        data: action.payload.data.map((item) => {\n          return { ...item, score: 0 };\n        }),\n        totalTeams: action.payload.data.length,\n        loading: false,\n      };\n    });\n    builder.addCase(fetchTeams.rejected, (state, action) => {\n      return { ...state, error: action.payload, loading: false };\n    });\n  },\n});\n\nexport const {\n  setCurrentRound,\n  setCurrentTeam,\n  setTotalRounds,\n  setTeamScore,\n  setRoundSelected,\n  setSubject,\n} = teamSlice.actions;\nexport default teamSlice.reducer;\n\n// Thunks Here\nexport const fetchTeams = createAsyncThunk(\n  'teams/fetch',\n  async (data, { rejectWithValue }) => {\n    try {\n      return await axios.get(`/selectteams?round=${data}`);\n    } catch (error) {\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}